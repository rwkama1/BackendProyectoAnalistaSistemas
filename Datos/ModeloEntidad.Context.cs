//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoEntities : DbContext
    {
        public ProyectoEntities()
            : base("name=ProyectoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Cadete> Cadete { get; set; }
        public virtual DbSet<Cajero> Cajero { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Compra> Compra { get; set; }
        public virtual DbSet<Cuota> Cuota { get; set; }
        public virtual DbSet<FacturaCompra> FacturaCompra { get; set; }
        public virtual DbSet<LineaCompra> LineaCompra { get; set; }
        public virtual DbSet<LineaFacturaCompra> LineaFacturaCompra { get; set; }
        public virtual DbSet<LineaVenta> LineaVenta { get; set; }
        public virtual DbSet<Mensaje> Mensaje { get; set; }
        public virtual DbSet<OrdenEnvio> OrdenEnvio { get; set; }
        public virtual DbSet<OrdenTaller> OrdenTaller { get; set; }
        public virtual DbSet<PagoTarjeta> PagoTarjeta { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<ProductosOE> ProductosOE { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Stocker> Stocker { get; set; }
        public virtual DbSet<Tecnico> Tecnico { get; set; }
        public virtual DbSet<Vendedor> Vendedor { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<LogueoAdministrador_Result> LogueoAdministrador(Nullable<long> cedula, string contraseña)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(long));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LogueoAdministrador_Result>("LogueoAdministrador", cedulaParameter, contraseñaParameter);
        }
    }
}
